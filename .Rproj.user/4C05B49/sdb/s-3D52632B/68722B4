{
    "contents" : "Cricket = read.csv(\"Cricket.csv\",stringsAsFactors = F);\nnames(Cricket)[1] = \"Ball.No\";\nnames(Cricket)[2] = \"Match.No\";\nnames(Cricket)[4] = \"Batting.Team\";\nnames(Cricket)[19] = \"Runs.Extras.Wides\";\nnames(Cricket)[20] = \"Runs.Extras.No.Ball\";\nnames(Cricket)[21] = \"Runs.Extras.Byes\";\nnames(Cricket)[22] = \"Runs.Extras.Legbyes\";\nTeams = unique(Cricket$Batting.Team);\nMatches = unique(Cricket$Match.No);\nCities = unique(Cricket$City);\nVenues = unique(Cricket$Venue);\nBatsmen = unique(Cricket$Batsman)\nBowlers = unique(Cricket$Bowler)\nFielders = unique(Cricket$Wicket.Fielder)\nPlayers = c(Batsmen,Bowlers,Fielders);\nPlayers = unique(Players);\nWicket.Kinds = unique(Cricket$Wicket.Kind);\n\nbatsmen_record = function(batsman){\n  Batsman = data.frame(matrix(nrow=1,ncol=12));\n  names(Batsman) = c(\"Batsman\",\"Country\",\"Matches\",\"Runs\",\"Average\",\"Strike.Rate\",\"Outs\",\"Balls\",\"Fours\",\"Sixes\",\"Position1\",\"Position2\");\n  Batsman$Batsman = batsman;\n  Batsman$Country = Cricket$Batting.Team[(Cricket$Batsman==batsman)][1];\n  Batsman$Matches = length(unique(Cricket$Match.No[(Cricket$Batsman==batsman)]));\n  Batsman$Runs = sum(Cricket$Runs.Batsman[(Cricket$Batsman==batsman)]);\n  Batsman$Balls = length(Cricket$Ball.No[((Cricket$Batsman==batsman)&(Cricket$Runs.Extras.Wides==0))]);\n  Batsman$Outs = length(Cricket$Ball.No[(Cricket$Dismissed.Player==batsman)]);\n  Batsman$Average = round(Batsman$Runs/Batsman$Outs,2);\n  if(is.infinite(Batsman$Average)){\n    Batsman$Average = Batsman$Runs;\n  }\n  Batsman$Strike.Rate = round(Batsman$Runs*100/Batsman$Balls,2);\n  Batsman$Fours = sum(Cricket$Runs.Batsman[(Cricket$Batsman==batsman)]==4);\n  Batsman$Sixes = sum(Cricket$Runs.Batsman[(Cricket$Batsman==batsman)]==6);\n  Batsman$Position1 = as.vector(get_position(Batsman$Batsman)[1]);\n  Batsman$Position2 = as.vector(get_position(Batsman$Batsman)[2]);\n  return(Batsman);\n}\n\nBatsmen_records =  as.data.frame(t(sapply(Batsmen,batsmen_record)),row.names=FALSE);\n\nbowler_record = function(bowler){\n  Bowler = data.frame(matrix(nrow=1,ncol=12));\n  names(Bowler) = c(\"Bowler\",\"Country\",\"Matches\",\"Wickets\",\"Runs\",\"Overs\",\"Average\",\"Economy\",\"Strike.Rate\",\"Dot.Ball.Percent\",\"Position1\",\"Position2\");\n  Bowler$Bowler = bowler;\n  record = Cricket[(Cricket$Bowler==bowler),];\n  if(record[1,]$Batting.Team==record[1,]$Team1){\n    Bowler$Country = record[1,]$Team2;\n  }\n  else{\n    Bowler$Country = record[1,]$Team1;\n  }\n  Bowler$Matches = length(unique(Cricket$Match.No[(Cricket$Bowler==bowler)]));\n  Bowler$Runs = sum(Cricket$Runs.Batsman[(Cricket$Bowler==bowler)])+sum(Cricket$Runs.Extras.No.Ball[(Cricket$Bowler==bowler)])+sum(Cricket$Runs.Extras.Wides[(Cricket$Bowler==bowler)]);\n  Balls = length(Cricket$Ball.No[((Cricket$Bowler==bowler)&(Cricket$Runs.Extras.Wides==0)&(Cricket$Runs.Extras.No.Ball==0))]);\n  Bowler$Overs = round(Balls/6,0);\n  Bowler$Wickets = length(Cricket$Ball.No[((Cricket$Dismissed.Player!=\"\")&(Cricket$Bowler==bowler))]);\n  Bowler$Average = round(Bowler$Runs/Bowler$Wickets,2);\n  if(is.infinite(Bowler$Average)){\n    Bowler$Average = Bowler$Runs;\n  }\n  Bowler$Economy = round(Bowler$Runs*6/Balls,2);\n  Bowler$Strike.Rate = round(Balls/Bowler$Wickets,2);\n  if(is.infinite(Bowler$Strike.Rate)){\n    Bowler$Strike.Rate = Balls;\n  }\n  Bowler$Dot.Ball.Percent = round(length(Cricket$Ball.No[((Cricket$Bowler==bowler)&(Cricket$Total.Runs==0))])*100/Balls,2);\n  overs = length(Cricket$Ball.No[((Cricket$Bowler==bowler)&(Cricket$Over<=10))]);\n  overs = c(overs,length(Cricket$Ball.No[((Cricket$Bowler==bowler)&(Cricket$Over>10)&(Cricket$Over<=20))]));\n  overs = c(overs,length(Cricket$Ball.No[((Cricket$Bowler==bowler)&(Cricket$Over>20)&(Cricket$Over<=40))]));\n  overs = c(overs,length(Cricket$Ball.No[((Cricket$Bowler==bowler)&(Cricket$Over>40)&(Cricket$Over<=50))]));\n  over = data.frame(cbind(1:4),overs);\n  over = over[order(over$overs,decreasing=TRUE),1];\n  Bowler$Position1 = as.vector(over)[1];\n  Bowler$Position2 = as.vector(over)[2];\n  return(Bowler);\n}\n\nBowlers_records =  as.data.frame(t(sapply(Bowlers,bowler_record)),row.names=FALSE);\n\nget_position = function(batsman){\n  matches = unique(Cricket$Match.No[(Cricket$Batsman==batsman)]);\n  positions = c();\n  for(match in matches){\n    positions = c(positions,get_pos(match,batsman));\n  }\n  positions = as.data.frame(table(positions));\n  position = positions[order(positions$Freq,decreasing=TRUE),1];\n  return(position);\n}\n\nget_pos = function(match,batsman){\n  country = Cricket$Batting.Team[(Cricket$Batsman==batsman)][1];\n  batting = unique(Cricket$Batsman[((Cricket$Match.No==match)&(Cricket$Batting.Team==country))]);\n  position = which(batting == batsman);\n  return(position);\n}\n",
    "created" : 1413190814881.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "882125492",
    "id" : "68722B4",
    "lastKnownWriteTime" : 1413220777,
    "path" : "C:/Users/dell/Desktop/TNT/Cricket_Craze/data.R",
    "project_path" : "data.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}